   Compiling oat-db-rust v0.1.0 (/Users/rikardolsson/Develop/Rust/oat-db-rust)
warning: unexpected `cfg` condition value: `enable-broken-tests`
  --> src/lib.rs:51:17
   |
51 | #[cfg(all(test, feature = "enable-broken-tests"))]
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove the condition
   |
   = note: no expected values for `feature`
   = help: consider adding `enable-broken-tests` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused import: `Version`
  --> src/api/handlers.rs:18:125
   |
18 |     InstanceQueryRequest, NewClassDef, NewConfigurationArtifact, NewDatabase, PropertyValue, RelationshipSelection, Schema, Version,
   |                                                                                                                             ^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `InstanceFilter` and `SelectionSpec`
   --> src/logic/expand.rs:208:28
    |
208 |         use crate::model::{InstanceFilter, SelectionSpec, Quantifier};
    |                            ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `enable-broken-tests`
   --> src/logic/solve_pipeline.rs:964:17
    |
964 | #[cfg(all(test, feature = "enable-broken-tests"))]
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove the condition
    |
    = note: no expected values for `feature`
    = help: consider adding `enable-broken-tests` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused variable: `schema`
    --> src/api/handlers.rs:5990:21
     |
5990 |     RequestJson(mut schema): RequestJson<Schema>,
     |                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_schema`
     |
     = note: `#[warn(unused_variables)]` on by default

warning: variable does not need to be mutable
    --> src/api/handlers.rs:5990:17
     |
5990 |     RequestJson(mut schema): RequestJson<Schema>,
     |                 ----^^^^^^
     |                 |
     |                 help: remove this `mut`
     |
     = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `rels`
    --> src/api/handlers.rs:6249:27
     |
6249 |                 if let Ok(rels) = serde_json::from_value::<HashMap<String, RelationshipSelection>>(value) {
     |                           ^^^^ help: if this is intentional, prefix it with an underscore: `_rels`

warning: unused variable: `schema`
    --> src/api/handlers.rs:6324:21
     |
6324 |     RequestJson(mut schema): RequestJson<Schema>,
     |                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_schema`

warning: unused variable: `main_branch_name`
    --> src/api/handlers.rs:6326:9
     |
6326 |     let main_branch_name = get_main_branch_name(&*store, &db_id).await?;
     |         ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_main_branch_name`

warning: variable does not need to be mutable
    --> src/api/handlers.rs:6324:17
     |
6324 |     RequestJson(mut schema): RequestJson<Schema>,
     |                 ----^^^^^^
     |                 |
     |                 help: remove this `mut`

warning: variable does not need to be mutable
    --> src/api/handlers.rs:6450:17
     |
6450 |     RequestJson(mut instance): RequestJson<Instance>,
     |                 ----^^^^^^^^
     |                 |
     |                 help: remove this `mut`

warning: unused variable: `rels`
    --> src/api/handlers.rs:6513:27
     |
6513 |                 if let Ok(rels) = serde_json::from_value::<HashMap<String, RelationshipSelection>>(value) {
     |                           ^^^^ help: if this is intentional, prefix it with an underscore: `_rels`

warning: unused variable: `class_id`
    --> src/api/handlers.rs:6748:31
     |
6748 |     Path((db_id, branch_name, class_id)): Path<(Id, String, Id)>,
     |                               ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_class_id`

warning: unused variable: `main_branch_name`
    --> src/api/handlers.rs:6800:9
     |
6800 |     let main_branch_name = get_main_branch_name(&*store, &db_id).await?;
     |         ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_main_branch_name`

warning: unused variable: `class_id`
    --> src/api/handlers.rs:6853:18
     |
6853 |     Path((db_id, class_id)): Path<(Id, Id)>,
     |                  ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_class_id`

warning: unused variable: `main_branch_name`
    --> src/api/handlers.rs:6855:9
     |
6855 |     let main_branch_name = get_main_branch_name(&*store, &db_id).await?;
     |         ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_main_branch_name`

warning: unused variable: `user_context`
    --> src/api/handlers.rs:6870:5
     |
6870 |     user_context: UserContext,
     |     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_context`

warning: unused variable: `user_context`
    --> src/api/handlers.rs:6919:5
     |
6919 |     user_context: UserContext,
     |     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_context`

warning: unreachable expression
   --> src/logic/validate_simple.rs:435:17
    |
431 |                   return;
    |                   ------ any code following this expression is unreachable
...
435 | /                 if target_ids.is_empty() {
436 | |                     result.warnings.push(ValidationWarning {
437 | |                         instance_id: instance.id.clone(),
438 | |                         warning_type: ValidationWarningType::RelationshipNotValidated,
...   |
444 | |                     });
445 | |                 }
    | |_________________^ unreachable expression
    |
    = note: `#[warn(unreachable_code)]` on by default

warning: unused variable: `store`
   --> src/logic/validate_simple.rs:299:9
    |
299 |         store: &S,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_store`

warning: unused variable: `rel_def`
   --> src/logic/validate_simple.rs:364:25
    |
364 |             if let Some(rel_def) = rel_def {
    |                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rel_def`

warning: unreachable statement
   --> src/logic/branch_ops.rs:275:9
    |
273 |         return Err(anyhow::anyhow!("Merge operations disabled pending commit-based architecture update"));
    |         ------------------------------------------------------------------------------------------------- any code following this expression is unreachable
274 |         
275 |         let mut merged_instances = 0;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement

warning: unused variable: `store`
   --> src/logic/branch_ops.rs:267:9
    |
267 |         store: &S,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_store`

warning: unused variable: `source_branch`
   --> src/logic/branch_ops.rs:268:9
    |
268 |         source_branch: &Branch,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_source_branch`

warning: unused variable: `target_branch`
   --> src/logic/branch_ops.rs:269:9
    |
269 |         target_branch: &Branch,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_branch`

warning: unused variable: `target_schema`
   --> src/logic/branch_ops.rs:280:21
    |
280 |             let mut target_schema = source_schema.clone();
    |                     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_schema`

warning: unused variable: `instance`
   --> src/logic/branch_ops.rs:290:17
    |
290 |         for mut instance in source_instances {
    |                 ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_instance`

warning: unreachable statement
   --> src/logic/branch_ops.rs:312:9
    |
306 |         return Err(anyhow::anyhow!("Branch cleanup operations disabled pending commit-based architecture update"));
    |         ---------------------------------------------------------------------------------------------------------- any code following this expression is unreachable
...
312 |         let instances = store.list_instances_for_branch(database_id, branch_name, None).await?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement

warning: unused variable: `store`
   --> src/logic/branch_ops.rs:304:44
    |
304 |     async fn cleanup_branch_data<S: Store>(store: &S, database_id: &Id, branch_name: &str) -> Result<()> {
    |                                            ^^^^^ help: if this is intentional, prefix it with an underscore: `_store`

warning: unused variable: `database_id`
   --> src/logic/branch_ops.rs:304:55
    |
304 |     async fn cleanup_branch_data<S: Store>(store: &S, database_id: &Id, branch_name: &str) -> Result<()> {
    |                                                       ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_database_id`

warning: unused variable: `branch_name`
   --> src/logic/branch_ops.rs:304:73
    |
304 |     async fn cleanup_branch_data<S: Store>(store: &S, database_id: &Id, branch_name: &str) -> Result<()> {
    |                                                                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_branch_name`

warning: unused variable: `instance`
   --> src/logic/branch_ops.rs:313:13
    |
313 |         for instance in instances {
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_instance`

warning: unreachable statement
   --> src/logic/branch_ops.rs:643:9
    |
642 |         return Err(anyhow::anyhow!("Rebase operations disabled pending commit-based architecture update"));
    |         -------------------------------------------------------------------------------------------------- any code following this expression is unreachable
643 |         let mut rebased_instances = 0;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement

warning: unused variable: `store`
   --> src/logic/branch_ops.rs:636:9
    |
636 |         store: &S,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_store`

warning: unused variable: `feature_branch`
   --> src/logic/branch_ops.rs:637:9
    |
637 |         feature_branch: &Branch,
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_feature_branch`

warning: unused variable: `target_branch`
   --> src/logic/branch_ops.rs:638:9
    |
638 |         target_branch: &Branch,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_branch`

warning: unused variable: `author`
   --> src/logic/branch_ops.rs:639:9
    |
639 |         author: Option<String>,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_author`

warning: unused variable: `rebased_schema`
   --> src/logic/branch_ops.rs:662:21
    |
662 |                 let rebased_schema =
    |                     ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rebased_schema`

warning: unused variable: `rebased_schema`
   --> src/logic/branch_ops.rs:668:25
    |
668 |                 let mut rebased_schema = target_schema;
    |                         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_rebased_schema`

warning: unused variable: `instance`
   --> src/logic/branch_ops.rs:693:13
    |
693 |         for instance in existing_feature_instances {
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_instance`

warning: unused variable: `instance`
   --> src/logic/branch_ops.rs:698:21
    |
698 |         for (_, mut instance) in target_instance_map {
    |                     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_instance`

warning: unused variable: `feature_instance`
   --> src/logic/branch_ops.rs:705:17
    |
705 |         for mut feature_instance in feature_instances {
    |                 ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_feature_instance`

warning: unused variable: `store`
   --> src/logic/expand.rs:274:9
    |
274 |         store: &S,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_store`

warning: unused variable: `selection`
   --> src/logic/expand.rs:275:9
    |
275 |         selection: &RelationshipSelection,
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_selection`

warning: unreachable expression
  --> src/logic/solve_pipeline.rs:64:9
   |
60 | /         return Err(anyhow::anyhow!(
61 | |             "Solve pipeline disabled pending commit-based architecture update"
62 | |         ));
   | |__________- any code following this expression is unreachable
63 |
64 | /         self.solve_instance_with_derived(request, target_instance_id, None)
65 | |             .await
   | |__________________^ unreachable expression

warning: unused variable: `request`
  --> src/logic/solve_pipeline.rs:56:9
   |
56 |         request: NewConfigurationArtifact,
   |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_request`

warning: unused variable: `target_instance_id`
  --> src/logic/solve_pipeline.rs:57:9
   |
57 |         target_instance_id: Id,
   |         ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_instance_id`

warning: unused variable: `database_id`
  --> src/seed/data.rs:91:10
   |
91 |     let (database_id, main_branch_id) = create_database_and_main_branch(store).await?;
   |          ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_database_id`

warning: unreachable statement
   --> src/seed/data.rs:500:5
    |
327 | /     return Err(anyhow::anyhow!(
328 | |         "Seed data must be updated to use working commit system"
329 | |     ));
    | |______- any code following this expression is unreachable
...
500 | /     return Err(anyhow::anyhow!(
501 | |         "Seed data must be updated to use working commit system"
502 | |     ));
    | |_______^ unreachable statement

warning: unused variable: `store`
   --> src/seed/data.rs:139:32
    |
139 | async fn load_schema<S: Store>(store: &S, branch_id: &Id) -> Result<()> {
    |                                ^^^^^ help: if this is intentional, prefix it with an underscore: `_store`

warning: unused variable: `branch_id`
   --> src/seed/data.rs:139:43
    |
139 | async fn load_schema<S: Store>(store: &S, branch_id: &Id) -> Result<()> {
    |                                           ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_branch_id`

warning: unused variable: `furniture_schema`
   --> src/seed/data.rs:141:9
    |
141 |     let furniture_schema = Schema {
    |         ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_furniture_schema`

warning: unreachable statement
    --> src/seed/data.rs:2122:5
     |
2116 | /     return Err(anyhow::anyhow!(
2117 | |         "Seed data must be updated to use working commit system"
2118 | |     ));
     | |______- any code following this expression is unreachable
...
2122 |       create_kitchen_instances(store, &branch_name).await?;
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement

warning: unused variable: `kitchen_schema`
    --> src/seed/data.rs:2113:9
     |
2113 |     let kitchen_schema = create_kitchen_schema(branch_name.clone()).await?;
     |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_kitchen_schema`

warning: unused variable: `branch_name`
    --> src/seed/data.rs:2134:32
     |
2134 | async fn create_kitchen_schema(branch_name: String) -> Result<Schema> {
     |                                ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_branch_name`

warning: unused variable: `new_branch_name`
   --> src/logic/branch_ops.rs:729:9
    |
729 |         new_branch_name: &str,
    |         ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_new_branch_name`

warning: function `enhance_working_commit_response_with_resolved_relationships` is never used
    --> src/api/handlers.rs:7463:10
     |
7463 | async fn enhance_working_commit_response_with_resolved_relationships<S: Store>(
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `#[warn(dead_code)]` on by default

warning: function `expand_working_commit_relationships` is never used
    --> src/api/handlers.rs:8769:10
     |
8769 | async fn expand_working_commit_relationships<S: Store>(
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `expand_changes_relationships` is never used
    --> src/api/handlers.rs:8853:10
     |
8853 | async fn expand_changes_relationships<S: Store>(
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function `resolve_selection` is never used
   --> src/logic/expand.rs:465:14
    |
9   | impl Expander {
    | ------------- associated function in this implementation
...
465 |     async fn resolve_selection<S: Store>(
    |              ^^^^^^^^^^^^^^^^^

warning: fields `evaluator` and `validator` are never read
  --> src/logic/solve_pipeline.rs:16:5
   |
14 | pub struct SolvePipeline<'a, S: Store> {
   |            ------------- fields in this struct
15 |     store: &'a S,
16 |     evaluator: SimpleEvaluator,
   |     ^^^^^^^^^
17 |     validator: SimpleValidator,
   |     ^^^^^^^^^

warning: function `create_system_class` is never used
  --> src/seed/data.rs:12:4
   |
12 | fn create_system_class(
   |    ^^^^^^^^^^^^^^^^^^^

warning: function `create_system_instance` is never used
  --> src/seed/data.rs:40:4
   |
40 | fn create_system_instance(
   |    ^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_system_class_full` is never used
  --> src/seed/data.rs:64:4
   |
64 | fn create_system_class_full(mut class_def: ClassDef) -> ClassDef {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_system_instance_full` is never used
  --> src/seed/data.rs:77:4
   |
77 | fn create_system_instance_full(mut instance: Instance) -> Instance {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `load_furniture_workflow_data` is never used
    --> src/seed/data.rs:2086:10
     |
2086 | async fn load_furniture_workflow_data<S: Store>(store: &S) -> Result<()> {
     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_kitchen_schema` is never used
    --> src/seed/data.rs:2134:10
     |
2134 | async fn create_kitchen_schema(branch_name: String) -> Result<Schema> {
     |          ^^^^^^^^^^^^^^^^^^^^^

warning: `oat-db-rust` (lib) generated 67 warnings (run `cargo fix --lib -p oat-db-rust` to apply 5 suggestions)
warning: unused import: `Store`
 --> src/main.rs:5:41
  |
5 | use oat_db_rust::store::{PostgresStore, Store};
  |                                         ^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `oat-db-rust` (bin "oat-db-rust") generated 1 warning (run `cargo fix --bin "oat-db-rust"` to apply 1 suggestion)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 4.83s
warning: the following packages contain code that will be rejected by a future version of Rust: sqlx-postgres v0.7.4
note: to see what the problems were, use the option `--future-incompat-report`, or run `cargo report future-incompatibilities --id 2`
     Running `target/debug/oat-db-rust`
OAT-DB: Combinatorial Database Server
Configuration loaded: server=127.0.0.1:7061
Connecting to PostgreSQL...
Skipping database migrations (already applied manually)...
Database ready with git-like schema
OAT-DB server running on http://127.0.0.1:7061
API documentation available at http://127.0.0.1:7061/docs
[2025-09-04T17:51:31Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=0 elapsed=2.249083ms elapsed_secs=0.002249083
[2025-09-04T18:02:38Z DEBUG sqlx::query] summary="SELECT id, database_id, branch_name, …" db.statement="\n\nSELECT\n  id,\n  database_id,\n  branch_name,\n  based_on_hash,\n  author,\n  created_at,\n  updated_at,\n  schema_data,\n  instances_data,\n  status\nFROM\n  working_commits\nWHERE\n  database_id = $1\n  AND branch_name = $2\n  AND status = 'active'\nORDER BY\n  updated_at DESC\nLIMIT\n  1\n" rows_affected=0 rows_returned=1 elapsed=2.020625ms elapsed_secs=0.002020625
DEBUG: Validating relationship 'wheels': PoolBased { pool: Some(InstanceFilter { types: Some(["Wheels"]), where_clause: None, sort: None, limit: None }), selection: None }
DEBUG: Validating relationship 'color': SimpleIds(["red"])
DEBUG: Would check if 1 instances exist in current branch...
[2025-09-04T18:02:52Z DEBUG sqlx::query] summary="SELECT id, database_id, branch_name, …" db.statement="\n\nSELECT\n  id,\n  database_id,\n  branch_name,\n  based_on_hash,\n  author,\n  created_at,\n  updated_at,\n  schema_data,\n  instances_data,\n  status\nFROM\n  working_commits\nWHERE\n  database_id = $1\n  AND branch_name = $2\n  AND status = 'active'\nORDER BY\n  updated_at DESC\nLIMIT\n  1\n" rows_affected=0 rows_returned=1 elapsed=479.75µs elapsed_secs=0.00047975
DEBUG: Validating relationship 'wheels': PoolBased { pool: Some(InstanceFilter { types: Some(["Wheels"]), where_clause: None, sort: None, limit: None }), selection: None }
DEBUG: Validating relationship 'color': SimpleIds(["red"])
DEBUG: Would check if 1 instances exist in current branch...
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT id, name, description, …" db.statement="\n\nSELECT\n  id,\n  name,\n  description,\n  created_at,\n  default_branch_name\nFROM\n  databases\nORDER BY\n  created_at\n" rows_affected=1 rows_returned=1 elapsed=1.482459ms elapsed_secs=0.001482459
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT id, database_id, branch_name, …" db.statement="\n\nSELECT\n  id,\n  database_id,\n  branch_name,\n  based_on_hash,\n  author,\n  created_at,\n  updated_at,\n  schema_data,\n  instances_data,\n  status\nFROM\n  working_commits\nWHERE\n  database_id = $1\n  AND branch_name = $2\n  AND status = 'active'\nORDER BY\n  updated_at DESC\nLIMIT\n  1\n" rows_affected=0 rows_returned=1 elapsed=299.292µs elapsed_secs=0.000299292
DEBUG: Validating relationship 'color': PoolBased { pool: Some(InstanceFilter { types: Some(["Color"]), where_clause: None, sort: None, limit: None }), selection: None }
DEBUG: Validating relationship 'wheels': PoolBased { pool: Some(InstanceFilter { types: Some(["Wheels"]), where_clause: None, sort: None, limit: None }), selection: None }
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\nORDER BY\n  created_at\n" rows_affected=11 rows_returned=11 elapsed=3.631167ms elapsed_secs=0.003631167
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=3.818542ms elapsed_secs=0.003818542
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=3.987208ms elapsed_secs=0.003987208
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=1.209333ms elapsed_secs=0.001209333
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT id, database_id, branch_name, …" db.statement="\n\nSELECT\n  id,\n  database_id,\n  branch_name,\n  based_on_hash,\n  author,\n  created_at,\n  updated_at,\n  schema_data,\n  instances_data,\n  status\nFROM\n  working_commits\nWHERE\n  database_id = $1\n  AND branch_name = $2\n  AND status = 'active'\nORDER BY\n  updated_at DESC\nLIMIT\n  1\n" rows_affected=0 rows_returned=1 elapsed=2.676792ms elapsed_secs=0.002676792
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT id, database_id, branch_name, …" db.statement="\n\nSELECT\n  id,\n  database_id,\n  branch_name,\n  based_on_hash,\n  author,\n  created_at,\n  updated_at,\n  schema_data,\n  instances_data,\n  status\nFROM\n  working_commits\nWHERE\n  database_id = $1\n  AND branch_name = $2\n  AND status = 'active'\nORDER BY\n  updated_at DESC\nLIMIT\n  1\n" rows_affected=0 rows_returned=1 elapsed=3.037041ms elapsed_secs=0.003037041
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT id, commit_hash, tag_type, …" db.statement="\n\nSELECT\n  id,\n  commit_hash,\n  tag_type,\n  tag_name,\n  tag_description,\n  created_at,\n  created_by,\n  metadata\nFROM\n  commit_tags\nWHERE\n  commit_hash = $1\nORDER BY\n  created_at DESC\n" rows_affected=0 rows_returned=0 elapsed=2.783333ms elapsed_secs=0.002783333
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=269.083µs elapsed_secs=0.000269083
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=819.125µs elapsed_secs=0.000819125
[2025-09-04T18:02:53Z DEBUG sqlx::query] summary="SELECT id, commit_hash, tag_type, …" db.statement="\n\nSELECT\n  id,\n  commit_hash,\n  tag_type,\n  tag_name,\n  tag_description,\n  created_at,\n  created_by,\n  metadata\nFROM\n  commit_tags\nWHERE\n  commit_hash = $1\nORDER BY\n  created_at DESC\n" rows_affected=1 rows_returned=1 elapsed=891.959µs elapsed_secs=0.000891959
[2025-09-04T18:02:58Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=225.625µs elapsed_secs=0.000225625
[2025-09-04T18:02:58Z DEBUG sqlx::query] summary="SELECT id, database_id, branch_name, …" db.statement="\n\nSELECT\n  id,\n  database_id,\n  branch_name,\n  based_on_hash,\n  author,\n  created_at,\n  updated_at,\n  schema_data,\n  instances_data,\n  status\nFROM\n  working_commits\nWHERE\n  database_id = $1\n  AND branch_name = $2\n  AND status = 'active'\nORDER BY\n  updated_at DESC\nLIMIT\n  1\n" rows_affected=0 rows_returned=1 elapsed=319.208µs elapsed_secs=0.000319208
[2025-09-04T18:03:28Z DEBUG sqlx::query] summary="SELECT id, database_id, branch_name, …" db.statement="\n\nSELECT\n  id,\n  database_id,\n  branch_name,\n  based_on_hash,\n  author,\n  created_at,\n  updated_at,\n  schema_data,\n  instances_data,\n  status\nFROM\n  working_commits\nWHERE\n  database_id = $1\n  AND branch_name = $2\n  AND status = 'active'\nORDER BY\n  updated_at DESC\nLIMIT\n  1\n" rows_affected=0 rows_returned=1 elapsed=4.12725ms elapsed_secs=0.00412725
DEBUG: Validating relationship 'wheels': PoolBased { pool: Some(InstanceFilter { types: Some(["Wheels"]), where_clause: None, sort: None, limit: None }), selection: None }
DEBUG: Validating relationship 'color': PoolBased { pool: Some(InstanceFilter { types: Some(["Color"]), where_clause: None, sort: None, limit: None }), selection: None }
[2025-09-04T18:05:19Z DEBUG sqlx::query] summary="SELECT id, database_id, branch_name, …" db.statement="\n\nSELECT\n  id,\n  database_id,\n  branch_name,\n  based_on_hash,\n  author,\n  created_at,\n  updated_at,\n  schema_data,\n  instances_data,\n  status\nFROM\n  working_commits\nWHERE\n  database_id = $1\n  AND branch_name = $2\n  AND status = 'active'\nORDER BY\n  updated_at DESC\nLIMIT\n  1\n" rows_affected=0 rows_returned=1 elapsed=578.167µs elapsed_secs=0.000578167
DEBUG: Validating relationship 'color': PoolBased { pool: Some(InstanceFilter { types: Some(["Color"]), where_clause: None, sort: None, limit: None }), selection: None }
DEBUG: Validating relationship 'wheels': PoolBased { pool: Some(InstanceFilter { types: Some(["Wheels"]), where_clause: None, sort: None, limit: None }), selection: None }
[2025-09-04T18:11:35Z DEBUG sqlx::query] summary="SELECT id, name, description, …" db.statement="\n\nSELECT\n  id,\n  name,\n  description,\n  created_at,\n  default_branch_name\nFROM\n  databases\nORDER BY\n  created_at\n" rows_affected=1 rows_returned=1 elapsed=1.6615ms elapsed_secs=0.0016615
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\nORDER BY\n  created_at\n" rows_affected=11 rows_returned=11 elapsed=600.417µs elapsed_secs=0.000600417
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=317.042µs elapsed_secs=0.000317042
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT id, commit_hash, tag_type, …" db.statement="\n\nSELECT\n  id,\n  commit_hash,\n  tag_type,\n  tag_name,\n  tag_description,\n  created_at,\n  created_by,\n  metadata\nFROM\n  commit_tags\nWHERE\n  commit_hash = $1\nORDER BY\n  created_at DESC\n" rows_affected=0 rows_returned=0 elapsed=445.25µs elapsed_secs=0.00044525
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=1.461125ms elapsed_secs=0.001461125
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT id, commit_hash, tag_type, …" db.statement="\n\nSELECT\n  id,\n  commit_hash,\n  tag_type,\n  tag_name,\n  tag_description,\n  created_at,\n  created_by,\n  metadata\nFROM\n  commit_tags\nWHERE\n  commit_hash = $1\nORDER BY\n  created_at DESC\n" rows_affected=0 rows_returned=0 elapsed=2.08575ms elapsed_secs=0.00208575
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=299.875µs elapsed_secs=0.000299875
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT id, commit_hash, tag_type, …" db.statement="\n\nSELECT\n  id,\n  commit_hash,\n  tag_type,\n  tag_name,\n  tag_description,\n  created_at,\n  created_by,\n  metadata\nFROM\n  commit_tags\nWHERE\n  commit_hash = $1\nORDER BY\n  created_at DESC\n" rows_affected=0 rows_returned=0 elapsed=120.083µs elapsed_secs=0.000120083
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=0 elapsed=135.667µs elapsed_secs=0.000135667
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=110.167µs elapsed_secs=0.000110167
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT id, commit_hash, tag_type, …" db.statement="\n\nSELECT\n  id,\n  commit_hash,\n  tag_type,\n  tag_name,\n  tag_description,\n  created_at,\n  created_by,\n  metadata\nFROM\n  commit_tags\nWHERE\n  commit_hash = $1\nORDER BY\n  created_at DESC\n" rows_affected=1 rows_returned=1 elapsed=3.796958ms elapsed_secs=0.003796958
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=1.064125ms elapsed_secs=0.001064125
[2025-09-04T18:11:42Z DEBUG sqlx::query] summary="SELECT id, commit_hash, tag_type, …" db.statement="\n\nSELECT\n  id,\n  commit_hash,\n  tag_type,\n  tag_name,\n  tag_description,\n  created_at,\n  created_by,\n  metadata\nFROM\n  commit_tags\nWHERE\n  commit_hash = $1\nORDER BY\n  created_at DESC\n" rows_affected=1 rows_returned=1 elapsed=357.333µs elapsed_secs=0.000357333
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=471.667µs elapsed_secs=0.000471667
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=661.083µs elapsed_secs=0.000661083
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=325.5µs elapsed_secs=0.0003255
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=334.458µs elapsed_secs=0.000334458
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=294.083µs elapsed_secs=0.000294083
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=333.791µs elapsed_secs=0.000333791
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=142.333µs elapsed_secs=0.000142333
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=126.667µs elapsed_secs=0.000126667
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=117µs elapsed_secs=0.000117
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=300.166µs elapsed_secs=0.000300166
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=282.167µs elapsed_secs=0.000282167
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=256.542µs elapsed_secs=0.000256542
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=306.459µs elapsed_secs=0.000306459
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=244.75µs elapsed_secs=0.00024475
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=187.291µs elapsed_secs=0.000187291
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=215.375µs elapsed_secs=0.000215375
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=246.375µs elapsed_secs=0.000246375
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=345.375µs elapsed_secs=0.000345375
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=244.667µs elapsed_secs=0.000244667
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=223.042µs elapsed_secs=0.000223042
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=253µs elapsed_secs=0.000253
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=169.5µs elapsed_secs=0.0001695
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=253.166µs elapsed_secs=0.000253166
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=201.083µs elapsed_secs=0.000201083
[2025-09-04T18:11:49Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=191.834µs elapsed_secs=0.000191834
[2025-09-04T18:11:58Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=357.167µs elapsed_secs=0.000357167
[2025-09-04T18:11:58Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=416.5µs elapsed_secs=0.0004165
[2025-09-04T18:11:58Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=357.833µs elapsed_secs=0.000357833
[2025-09-04T18:11:58Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=317.375µs elapsed_secs=0.000317375
[2025-09-04T18:12:05Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=306.584µs elapsed_secs=0.000306584
[2025-09-04T18:12:05Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=394.542µs elapsed_secs=0.000394542
[2025-09-04T18:12:05Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=351.459µs elapsed_secs=0.000351459
[2025-09-04T18:12:05Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=314.333µs elapsed_secs=0.000314333
[2025-09-04T18:12:16Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=468.958µs elapsed_secs=0.000468958
[2025-09-04T18:12:16Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=274.041µs elapsed_secs=0.000274041
[2025-09-04T18:12:38Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=308.041µs elapsed_secs=0.000308041
[2025-09-04T18:12:38Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=412.041µs elapsed_secs=0.000412041
[2025-09-04T18:12:38Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=316.125µs elapsed_secs=0.000316125
[2025-09-04T18:12:38Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=182.166µs elapsed_secs=0.000182166
[2025-09-04T18:12:43Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=293.458µs elapsed_secs=0.000293458
[2025-09-04T18:12:43Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=379µs elapsed_secs=0.000379
[2025-09-04T18:12:43Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=403.709µs elapsed_secs=0.000403709
[2025-09-04T18:12:43Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=320.958µs elapsed_secs=0.000320958
[2025-09-04T18:12:53Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=292.25µs elapsed_secs=0.00029225
[2025-09-04T18:12:53Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=179.75µs elapsed_secs=0.00017975
[2025-09-04T18:12:53Z DEBUG sqlx::query] summary="SELECT hash, database_id, parent_hash, …" db.statement="\n\nSELECT\n  hash,\n  database_id,\n  parent_hash,\n  author,\n  message,\n  created_at,\n  data,\n  data_size,\n  schema_classes_count,\n  instances_count\nFROM\n  commits\nWHERE\n  hash = $1\n" rows_affected=0 rows_returned=1 elapsed=237.292µs elapsed_secs=0.000237292
[2025-09-04T18:12:53Z DEBUG sqlx::query] summary="SELECT database_id, name, description, …" db.statement="\n\nSELECT\n  database_id,\n  name,\n  description,\n  parent_branch_name,\n  created_at,\n  current_commit_hash,\n  commit_message,\n  author,\n  status\nFROM\n  branches\nWHERE\n  database_id = $1\n  AND name = $2\n" rows_affected=0 rows_returned=1 elapsed=364.791µs elapsed_secs=0.000364791
